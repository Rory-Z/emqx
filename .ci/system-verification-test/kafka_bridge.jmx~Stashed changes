<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="test plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ca_route" elementType="Argument">
            <stringProp name="Argument.name">ca_route</stringProp>
            <stringProp name="Argument.value">/Users/xiangfangyang/Documents/ca/kafka/ca</stringProp>
            <stringProp name="Argument.desc">证书存放路径</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_ip" elementType="Argument">
            <stringProp name="Argument.name">emqx_ip</stringProp>
            <stringProp name="Argument.value">127.0.0.1</stringProp>
            <stringProp name="Argument.desc">emqx服务器ip地址</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dash_user" elementType="Argument">
            <stringProp name="Argument.name">dash_user</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.desc">dash应用账号</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="dash_pwd" elementType="Argument">
            <stringProp name="Argument.name">dash_pwd</stringProp>
            <stringProp name="Argument.value">public</stringProp>
            <stringProp name="Argument.desc">dash账号的密码</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salt" elementType="Argument">
            <stringProp name="Argument.name">salt</stringProp>
            <stringProp name="Argument.value">abcd</stringProp>
            <stringProp name="Argument.desc">盐值</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="topic" elementType="Argument">
            <stringProp name="Argument.name">topic</stringProp>
            <stringProp name="Argument.value">test/kafka</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_ip" elementType="Argument">
            <stringProp name="Argument.name">kafka_ip</stringProp>
            <stringProp name="Argument.value">122.112.146.22</stringProp>
            <stringProp name="Argument.desc">卡夫卡服务器ip</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_port" elementType="Argument">
            <stringProp name="Argument.name">kafka_port</stringProp>
            <stringProp name="Argument.value">9092</stringProp>
            <stringProp name="Argument.desc">卡夫卡服务器端口</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="topic" elementType="Argument">
            <stringProp name="Argument.name">topic</stringProp>
            <stringProp name="Argument.value">test/kafka</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_user" elementType="Argument">
            <stringProp name="Argument.name">kafka_user</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="kafka_pwd" elementType="Argument">
            <stringProp name="Argument.name">kafka_pwd</stringProp>
            <stringProp name="Argument.value">password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">content-type</stringProp>
              <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${emqx_ip}</stringProp>
          <stringProp name="HTTPSampler.port">18083</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${emqx_ip}</stringProp>
              <stringProp name="Authorization.username">${dash_user}</stringProp>
              <stringProp name="Authorization.password">${dash_pwd}</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="result tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="get ssl content" enabled="true">
          <stringProp name="TestPlan.comments">get variables：ca, redis_key, redis_cert</stringProp>
          <stringProp name="BeanShellSampler.query">import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;

File f_ca = new File(&quot;${ca_route}/ca.pem&quot;);
File f_key = new File(&quot;${ca_route}/client.key&quot;);
File f_cert = new File(&quot;${ca_route}/client.csr&quot;);
BufferedReader br_ca = new BufferedReader(new InputStreamReader(new FileInputStream(f_ca),&quot;UTF-8&quot;));
BufferedReader br_key = new BufferedReader(new InputStreamReader(new FileInputStream(f_key),&quot;UTF-8&quot;));
BufferedReader br_cert = new BufferedReader(new InputStreamReader(new FileInputStream(f_cert),&quot;UTF-8&quot;));
 
String line_ca = null;
String ca=&quot;&quot;;
while ((line_ca = br_ca.readLine()) != null) {
		//System.out.println(line_ca);
	if(line_ca!=&quot;&quot;)
		ca = ca +line_ca+&quot;\\\n&quot;;
		if(line_ca.contains(&quot;END&quot;))
		break;
}
String line_key = null;
String kafka_key=&quot;&quot;;
while ((line_key = br_key.readLine()) != null) {
		//System.out.println(line_key);
		kafka_key = kafka_key +line_key+&quot;\\\n&quot;;
		if(line_key.contains(&quot;END&quot;))
		break;
}
String line_cert = null;
String kafka_cert=&quot;&quot;;
while ((line_cert = br_cert.readLine()) != null) {
		//System.out.println(line_key);
		kafka_cert = kafka_cert +line_cert+&quot;\\\n&quot;;
		if(line_cert.contains(&quot;END&quot;))
		break;
}
vars.put(&quot;ca&quot;,ca);
vars.put(&quot;kafka_key&quot;,kafka_key);
vars.put(&quot;kafka_cert&quot;,kafka_cert);

//	br.close();
 //       fis.close();
 // 	System.out.println(line);

</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get modules" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">18083</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v4/modules</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">get some medules&apos; id needed</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">acl_control_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.title.en=~/.*Internal ACL File.*/)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">err_acl_control_id</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="setup settings" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;mqtt_wildcard_subscription&quot;:&quot;true&quot;,&quot;mqtt_strict_mode&quot;:&quot;false&quot;,&quot;mqtt_shared_subscription&quot;:&quot;true&quot;,&quot;mqtt_retain_available&quot;:&quot;true&quot;,&quot;mqtt_max_topic_levels&quot;:&quot;0&quot;,&quot;mqtt_max_topic_alias&quot;:&quot;65535&quot;,&quot;mqtt_max_qos_allowed&quot;:&quot;2&quot;,&quot;mqtt_max_packet_size&quot;:&quot;1MB&quot;,&quot;mqtt_max_clientid_len&quot;:&quot;65535&quot;,&quot;mqtt_ignore_loop_deliver&quot;:&quot;false&quot;,&quot;flapping_detect_policy&quot;:&quot;30, 1m, 5m&quot;,&quot;enable_acl_cache&quot;:&quot;off&quot;,&quot;broker_sys_interval&quot;:&quot;1m&quot;,&quot;broker_sys_heartbeat&quot;:&quot;30s&quot;,&quot;broker_shared_subscription_strategy&quot;:&quot;random&quot;,&quot;broker_shared_dispatch_ack_enabled&quot;:&quot;false&quot;,&quot;broker_session_locking_strategy&quot;:&quot;quorum&quot;,&quot;allow_anonymous&quot;:&quot;true&quot;,&quot;acl_nomatch&quot;:&quot;allow&quot;,&quot;acl_deny_action&quot;:&quot;ignore&quot;,&quot;acl_cache_ttl&quot;:&quot;1m&quot;,&quot;acl_cache_max_size&quot;:&quot;32&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v4/configs/emqx</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">&quot;enable_acl_cache&quot;:&quot;off&quot;,&quot;acl_nomatch&quot;:&quot;allow&quot;,&quot;allow_anonymous&quot;:&quot;true&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543476">&quot;code&quot;:0}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="enable internal acl control" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;enabled&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v4/modules/${acl_control_id}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543476">&quot;code&quot;:0}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="add kafka resource" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;config&quot;:{&quot;servers&quot;:&quot;${kafka_ip}:9093&quot;,&quot;min_metadata_refresh_interval&quot;:&quot;3s&quot;,&quot;username&quot;:&quot;${kafka_user}&quot;,&quot;password&quot;:&quot;${kafka_pwd}&quot;,&quot;sync_timeout&quot;:&quot;3s&quot;,&quot;max_batch_bytes&quot;:&quot;1024KB&quot;,&quot;compression&quot;:&quot;no_compression&quot;,&quot;send_buffer&quot;:&quot;1024KB&quot;,&quot;query_api_versions&quot;:true,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;${ca}&quot;,&quot;filename&quot;:&quot;ca.pem&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;${kafka_key}&quot;,&quot;filename&quot;:&quot;client.key&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;${kafka_cert}&quot;,&quot;filename&quot;:&quot;client.csr&quot;},&quot;verify&quot;:false},&quot;description&quot;:&quot;&quot;,&quot;type&quot;:&quot;bridge_kafka&quot;,&quot;id&quot;:&quot;resource:${__Random(100000,999999,ra)}&quot;,&quot;name&quot;:&quot;bridge_kafka&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v4/resources</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKall_isr+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="create rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;params&quot;:{&quot;topic&quot;:&quot;testTopic&quot;,&quot;type&quot;:&quot;sync&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;fallbacks&quot;:[],&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${__Random(100000,999999,ra2)}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKall_isr+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKall_isr+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKall_isr+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKall_isr+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKall_isr+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKleader_only+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKleader_only+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKleader_only+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKleader_only+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKleader_only+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKleader_only+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKnone+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKnone+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKnone+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKnone+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_random+ACKnone+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题random+ACKnone+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKall_isr+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKall_isr+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKall_isr+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKall_isr+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKall_isr+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKall_isr+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKleader_only+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKleader_only+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKleader_only+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKleader_only+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKleader_only+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKleader_only+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKnone+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKnone+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKnone+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKnone+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_roundrobin+ACKnone+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题roundrobin+ACKnone+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACKall_isr+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKall_isr+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACKall_isr+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_patch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKall_isr+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACKall_isr+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKall_isr+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACleader_only+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKleader_only+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON断言" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACleader_only+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKleader_only+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACKleader_only+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKleader_only+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACKnone+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKnone+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACKnone+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKnone+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Syn+Topic_first_key_dispatch+ACKnone+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;sync&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;sync&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">同步+主题first_key_dispatch+ACKnone+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKall_isr+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKall_isr+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKall_isr+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKall_isr+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKall_isr+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKall_isr+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKleader_only+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKleader_only+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKleader_only+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKleader_only+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKleader_only+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKleader_only+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKnone+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKnone+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKnone+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKnone+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_random+ACKnone+Disk&amp;Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;random&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;random&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题random+ACKnone+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACKall_isr+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKall_isr+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACKall_isr+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKall_isr+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACKall_isr+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKall_isr+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACKleader_only+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKleader_only+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACleader_only+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKleader_only+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACKleader_only+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKleader_only+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACKnone+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKnone+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACKnone+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKnone+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_roundrobin+ACKnone+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;roundrobin&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;roundrobin&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题roundrobin+ACKnone+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispatch+ACKall_isr+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKall_isr+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispatch+ACKall_isr+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKall_isr+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispatch+ACKall_isr+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;all_isr&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;all_isr&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKall_isr+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispatch+ACleader_only+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKleader_only+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispatch+ACleader_only+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKleader_only+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispatch+ACKleader_only+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;leader_only&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;leader_only&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKleader_only+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispatch+ACKnone+Memory cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKnone+Memory缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispacth+ACKnone+Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKnone+Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asyn+Topic_first_key_dispatch+ACKnone+Memory&amp;Disk cache" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get action_id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">action_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..actions[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_action_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="change rule" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;rawsql&quot;:&quot;SELECT\n\n*\nFROM\n\n  \&quot;test/#\&quot;\n&quot;,&quot;actions&quot;:[{&quot;params&quot;:{&quot;type&quot;:&quot;async&quot;,&quot;topic&quot;:&quot;testTopic&quot;,&quot;strategy&quot;:&quot;first_key_dispatch&quot;,&quot;segments_bytes&quot;:&quot;100MB&quot;,&quot;required_acks&quot;:&quot;none&quot;,&quot;payload_tmpl&quot;:&quot;&quot;,&quot;max_total_bytes&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;none&quot;,&quot;cache_mode&quot;:&quot;Memory+Disk&quot;,&quot;$resource&quot;:&quot;resource:${ra}&quot;},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;metrics&quot;:[{&quot;taken&quot;:45,&quot;success&quot;:45,&quot;node&quot;:&quot;emqx@127.0.0.1&quot;,&quot;failed&quot;:0}],&quot;id&quot;:&quot;${action_id}&quot;,&quot;fallbacks&quot;:[],&quot;failed&quot;:0,&quot;success&quot;:45,&quot;_config&quot;:{&quot;types&quot;:[&quot;bridge_kafka&quot;],&quot;title&quot;:&quot;Data bridge to Kafka&quot;,&quot;params&quot;:{&quot;type&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Type&quot;,&quot;order&quot;:2,&quot;enum&quot;:[&quot;sync&quot;,&quot;async&quot;],&quot;description&quot;:&quot;Produce Type&quot;,&quot;default&quot;:&quot;sync&quot;},&quot;topic&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Kafka Topic&quot;,&quot;required&quot;:true,&quot;order&quot;:1,&quot;description&quot;:&quot;Kafka Topic&quot;},&quot;strategy&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Strategy&quot;,&quot;order&quot;:3,&quot;enum&quot;:[&quot;random&quot;,&quot;roundrobin&quot;,&quot;first_key_dispatch&quot;],&quot;description&quot;:&quot;Produce Strategy&quot;,&quot;default&quot;:&quot;random&quot;},&quot;segments_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Segments Bytes&quot;,&quot;order&quot;:8,&quot;description&quot;:&quot;memory+disk mode, memory Bytes. Recommended maximum configuration is 1GB&quot;,&quot;default&quot;:&quot;100MB&quot;},&quot;required_acks&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Produce Acks&quot;,&quot;order&quot;:4,&quot;enum&quot;:[&quot;all_isr&quot;,&quot;leader_only&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Produce Acks&quot;,&quot;default&quot;:&quot;all_isr&quot;},&quot;payload_tmpl&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Payload Template&quot;,&quot;required&quot;:false,&quot;order&quot;:9,&quot;input&quot;:&quot;textarea&quot;,&quot;description&quot;:&quot;The payload template, variable interpolation is supported. If using empty template (default), then the payload will be all the available vars in JSON format&quot;,&quot;default&quot;:&quot;&quot;},&quot;max_total_bytes&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Max Cache Bytes&quot;,&quot;order&quot;:7,&quot;description&quot;:&quot;Max Cache Bytes&quot;,&quot;default&quot;:&quot;2GB&quot;},&quot;key&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Strategy Key&quot;,&quot;order&quot;:5,&quot;enum&quot;:[&quot;clientid&quot;,&quot;username&quot;,&quot;topic&quot;,&quot;none&quot;],&quot;description&quot;:&quot;Strategy Key, only take effect when strategy is first_key_dispatch&quot;,&quot;default&quot;:&quot;none&quot;},&quot;cache_mode&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Cache Mode&quot;,&quot;order&quot;:6,&quot;enum&quot;:[&quot;Memory&quot;,&quot;Disk&quot;,&quot;Memory+Disk&quot;],&quot;description&quot;:&quot;Cache Mode&quot;,&quot;default&quot;:&quot;Memory&quot;},&quot;$resource&quot;:{&quot;type&quot;:&quot;string&quot;,&quot;title&quot;:&quot;Resource ID&quot;,&quot;required&quot;:true,&quot;description&quot;:&quot;Bind a resource to this action&quot;}},&quot;name&quot;:&quot;data_to_kafka&quot;,&quot;for&quot;:&quot;$any&quot;,&quot;description&quot;:&quot;Data bridge to Kafka&quot;,&quot;category&quot;:&quot;data_forward&quot;,&quot;app&quot;:&quot;emqx_rule_actions&quot;},&quot;_value&quot;:[{&quot;label&quot;:&quot;Produce Type&quot;,&quot;value&quot;:&quot;async&quot;,&quot;key&quot;:&quot;type&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Kafka Topic&quot;,&quot;value&quot;:&quot;testTopic&quot;,&quot;key&quot;:&quot;topic&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Strategy&quot;,&quot;value&quot;:&quot;first_key_dispatch&quot;,&quot;key&quot;:&quot;strategy&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Segments Bytes&quot;,&quot;value&quot;:&quot;100MB&quot;,&quot;key&quot;:&quot;segments_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Produce Acks&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;required_acks&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Payload Template&quot;,&quot;value&quot;:&quot;&quot;,&quot;key&quot;:&quot;payload_tmpl&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Max Cache Bytes&quot;,&quot;value&quot;:&quot;2GB&quot;,&quot;key&quot;:&quot;max_total_bytes&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Strategy Key&quot;,&quot;value&quot;:&quot;none&quot;,&quot;key&quot;:&quot;key&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Cache Mode&quot;,&quot;value&quot;:&quot;Memory+Disk&quot;,&quot;key&quot;:&quot;cache_mode&quot;,&quot;fallbacks&quot;:[]},{&quot;label&quot;:&quot;Resource ID&quot;,&quot;value&quot;:&quot;resource:${ra}&quot;,&quot;key&quot;:&quot;$resource&quot;,&quot;fallbacks&quot;:[]}]}],&quot;description&quot;:&quot;&quot;,&quot;id&quot;:&quot;rule:${ra2}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">异步+主题first_key_dispatch+ACKnone+Memory&amp;Disk缓存</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
          <hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">127.0.0.1</stringProp>
              <stringProp name="mqtt.port">8083</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">WS</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">usr_na</stringProp>
              <stringProp name="mqtt.password">12312312</stringProp>
              <stringProp name="mqtt.client_id_prefix">ycl</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="MQTT Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}${__Random(1,10000,)}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">Random string with fixed length</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent"></stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check result" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
              <stringProp name="JSON_PATH">$..actions[0].metrics[0].success</stringProp>
              <stringProp name="EXPECTED_VALUE">5</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
              <boolProp name="EXPECT_NULL">false</boolProp>
              <boolProp name="INVERT">false</boolProp>
              <boolProp name="ISREGEX">true</boolProp>
            </JSONPathAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete kafka rule just added" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v4/rules/rule:${ra2}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete kafka resource just added" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v4/resources/resource:${ra}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
